import customtkinter as ctk
import pandas as pd
tab_exe = pd.read_excel("tabela_exercicios.xlsx")
lista_biceps = list(tab_exe["biceps"].dropna())
lista_triceps = list(tab_exe["triceps"].dropna())
lista_antebraco = list(tab_exe["antebraco"].dropna())
lista_ombro = list(tab_exe["ombro"].dropna())
lista_trapezio = list(tab_exe["trapezio"].dropna())
lista_costas = list(tab_exe["costas"].dropna())
lista_peito = list(tab_exe["peito"].dropna())
lista_quadriceps = list(tab_exe["quadriceps"].dropna())
lista_posterior = list(tab_exe["posterior"].dropna())
lista_panturrilha = list(tab_exe["panturrilha"].dropna())
lista_adutor = list(tab_exe["adutor"].dropna())
lista_abdutor = list(tab_exe["abdutor"].dropna())
lista_gluteo = list(tab_exe["gluteo"].dropna())
lista_abdomen = list(tab_exe["abdomen"].dropna())
lista_lombar = list(tab_exe["lombar"].dropna())
lista_paravertebral = list(tab_exe["paravertebral"].dropna())
lista_categorias = sorted(["ABDUTOR", "BÍCEPS", "TRÍCEPS", "ANTEBRAÇO", "OMBRO", "TRAPÉZIO", "COSTAS", "PEITO", "QUADRÍCEPS", "POSTERIOR", "PANTURRILHA", "ADUTOR", "GLÚTEO", "ABDÔMEN", "LOMBAR", "PARAVERTEBRAL"])

ctk.set_default_color_theme("dark-blue")
ctk.set_appearance_mode("dark")

principal = ctk.CTk()

principal.title("Menu Principal")
principal.geometry("340x140")
principal.maxsize(340, 140)
principal.minsize(340, 140)
principal.grid_columnconfigure(0, weight=1)

def func_treino():
    treino = ctk.CTk()
    def mod1(event):
        valor = str(int(repeticoes1.get()))
        trepeticoes1.configure(text=valor)
    def mod2(event):
        valor = str(int(repeticoes2.get()))
        trepeticoes2.configure(text=valor)
    def mod3(event):
        valor = str(int(repeticoes3.get()))
        trepeticoes3.configure(text=valor)
    def mod4(event):
        valor = str(int(repeticoes4.get()))
        trepeticoes4.configure(text=valor)
    def mod5(event):
        valor = str(int(repeticoes5.get()))
        trepeticoes5.configure(text=valor)
    def mod6(event):
        valor = str(int(repeticoes6.get()))
        trepeticoes6.configure(text=valor)
    def mod7(event):
        valor = str(int(repeticoes7.get()))
        trepeticoes7.configure(text=valor)
    def mod8(event):
        valor = str(int(repeticoes8.get()))
        trepeticoes8.configure(text=valor)
    def mod9(event):
        valor = str(int(repeticoes9.get()))
        trepeticoes9.configure(text=valor)
    def mod10(event):
        valor = str(int(repeticoes10.get()))
        trepeticoes10.configure(text=valor)
    def mod11(event):
        valor = str(int(repeticoes11.get()))
        trepeticoes11.configure(text=valor)
    def mod12(event):
        valor = str(int(repeticoes12.get()))
        trepeticoes12.configure(text=valor)
    def mod13(event):
        valor = str(int(repeticoes13.get()))
        trepeticoes13.configure(text=valor)
    def mod14(event):
        valor = str(int(repeticoes14.get()))
        trepeticoes14.configure(text=valor)
    def mod15(event):
        valor = str(int(repeticoes15.get()))
        trepeticoes15.configure(text=valor)
    def mod16(event):
        valor = str(int(repeticoes16.get()))
        trepeticoes16.configure(text=valor)

    def add():
        if cat_add.get() == "BÍCEPS":
            tab_exe = pd.read_excel("tabela_exercicios.xlsx")
            linha = len(tab_exe["biceps"])
            tab_exe.loc[linha, "biceps"] = exe_add.get()
            tab_exe.to_excel("tabela_exercicios.xlsx", index=False)
            exe_add.delete(0, 200)
        elif cat_add.get() == "TRÍCEPS":
            tab_exe = pd.read_excel("tabela_exercicios.xlsx")
            linha = len(tab_exe["triceps"])
            tab_exe.loc[linha, "triceps"] = exe_add.get()
            tab_exe.to_excel("tabela_exercicios.xlsx", index=False)
            exe_add.delete(0, 200)
        elif cat_add.get() == "ANTEBRAÇO":
            tab_exe = pd.read_excel("tabela_exercicios.xlsx")
            linha = len(tab_exe["antebraco"])
            tab_exe.loc[linha, "antebraco"] = exe_add.get()
            tab_exe.to_excel("tabela_exercicios.xlsx", index=False)
            exe_add.delete(0, 200)
        elif cat_add.get() == "OMBRO":
            tab_exe = pd.read_excel("tabela_exercicios.xlsx")
            linha = len(tab_exe["ombro"])
            tab_exe.loc[linha, "ombro"] = exe_add.get()
            tab_exe.to_excel("tabela_exercicios.xlsx", index=False)
            exe_add.delete(0, 200)
        elif cat_add.get() == "TRAPÉZIO":
            tab_exe = pd.read_excel("tabela_exercicios.xlsx")
            linha = len(tab_exe["trapezio"])
            tab_exe.loc[linha, "trapezio"] = exe_add.get()
            tab_exe.to_excel("tabela_exercicios.xlsx", index=False)
            exe_add.delete(0, 200)
        elif cat_add.get() == "COSTAS":
            tab_exe = pd.read_excel("tabela_exercicios.xlsx")
            linha = len(tab_exe["costas"])
            tab_exe.loc[linha, "costas"] = exe_add.get()
            tab_exe.to_excel("tabela_exercicios.xlsx", index=False)
            exe_add.delete(0, 200)
        elif cat_add.get() == "PEITO":
            tab_exe = pd.read_excel("tabela_exercicios.xlsx")
            linha = len(tab_exe["peito"])
            tab_exe.loc[linha, "peito"] = exe_add.get()
            tab_exe.to_excel("tabela_exercicios.xlsx", index=False)
            exe_add.delete(0, 200)
        elif cat_add.get() == "QUADRÍCEPS":
            tab_exe = pd.read_excel("tabela_exercicios.xlsx")
            linha = len(tab_exe["quadriceps"])
            tab_exe.loc[linha, "quadriceps"] = exe_add.get()
            tab_exe.to_excel("tabela_exercicios.xlsx", index=False)
            exe_add.delete(0, 200)
        elif cat_add.get() == "POSTERIOR":
            tab_exe = pd.read_excel("tabela_exercicios.xlsx")
            linha = len(tab_exe["posterior"])
            tab_exe.loc[linha, "posterior"] = exe_add.get()
            tab_exe.to_excel("tabela_exercicios.xlsx", index=False)
            exe_add.delete(0, 200)
        elif cat_add.get() == "PANTURRILHA":
            tab_exe = pd.read_excel("tabela_exercicios.xlsx")
            linha = len(tab_exe["panturrilha"])
            tab_exe.loc[linha, "panturrilha"] = exe_add.get()
            tab_exe.to_excel("tabela_exercicios.xlsx", index=False)
            exe_add.delete(0, 200)
        elif cat_add.get() == "ADUTOR":
            tab_exe = pd.read_excel("tabela_exercicios.xlsx")
            linha = len(tab_exe["adutor"])
            tab_exe.loc[linha, "adutor"] = exe_add.get()
            tab_exe.to_excel("tabela_exercicios.xlsx", index=False)
            exe_add.delete(0, 200)
        elif cat_add.get() == "ABDUTOR":
            tab_exe = pd.read_excel("tabela_exercicios.xlsx")
            linha = len(tab_exe["abdutor"])
            tab_exe.loc[linha, "abdutor"] = exe_add.get()
            tab_exe.to_excel("tabela_exercicios.xlsx", index=False)
            exe_add.delete(0, 200)
        elif cat_add.get() == "GLÚTEO":
            tab_exe = pd.read_excel("tabela_exercicios.xlsx")
            linha = len(tab_exe["gluteo"])
            tab_exe.loc[linha, "gluteo"] = exe_add.get()
            tab_exe.to_excel("tabela_exercicios.xlsx", index=False)
            exe_add.delete(0, 200)
        elif cat_add.get() == "ABDÔMEN":
            tab_exe = pd.read_excel("tabela_exercicios.xlsx")
            linha = len(tab_exe["abdomen"])
            tab_exe.loc[linha, "abdomen"] = exe_add.get()
            tab_exe.to_excel("tabela_exercicios.xlsx", index=False)
            exe_add.delete(0, 200)
        elif cat_add.get() == "LOMBAR":
            tab_exe = pd.read_excel("tabela_exercicios.xlsx")
            linha = len(tab_exe["lombar"])
            tab_exe.loc[linha, "lombar"] = exe_add.get()
            tab_exe.to_excel("tabela_exercicios.xlsx", index=False)
            exe_add.delete(0, 200)
        elif cat_add.get() == "PARAVERTEBRAL":
            tab_exe = pd.read_excel("tabela_exercicios.xlsx")
            linha = len(tab_exe["paravertebral"])
            tab_exe.loc[linha, "paravertebral"] = exe_add.get()
            tab_exe.to_excel("tabela_exercicios.xlsx", index=False)
            exe_add.delete(0, 200)

    def add1():
        caixa_texto.insert("insert", f"{menu_biceps.get()} | Série: {series1.get()} x {str(repeticoes1.get()).replace('.0','')} | Carga: {carga1.get()}\n")
        menu_biceps.set("Bíceps")
    def add2():
        caixa_texto.insert("insert", f"{menu_triceps.get()} | Série: {series2.get()} x {str(repeticoes2.get()).replace('.0','')} | Carga: {carga2.get()}\n")
        menu_triceps.set("Tríceps")
    def add3():
        caixa_texto.insert("insert", f"{menu_antebraco.get()} | Série: {series3.get()} x {str(repeticoes3.get()).replace('.0','')} | Carga: {carga3.get()}\n")
        menu_antebraco.set("Antebraço")
    def add4():
        caixa_texto.insert("insert", f"{menu_ombro.get()} | Série: {series4.get()} x {str(repeticoes4.get()).replace('.0','')} | Carga: {carga4.get()}\n")
        menu_ombro.set("Ombro")
    def add5():
        caixa_texto.insert("insert", f"{menu_trapezio.get()} | Série: {series5.get()} x {str(repeticoes5.get()).replace('.0','')} | Carga: {carga5.get()}\n")
        menu_trapezio.set("Trapézio")
    def add6():
        caixa_texto.insert("insert", f"{menu_costas.get()} | Série: {series16.get()} x {str(repeticoes6.get()).replace('.0','')} | Carga: {carga6.get()}\n")
        menu_costas.set("Costas")
    def add7():
        caixa_texto.insert("insert", f"{menu_peito.get()} | Série: {series7.get()} x {str(repeticoes7.get()).replace('.0','')} | Carga: {carga7.get()}\n")
        menu_peito.set("Peito")
    def add8():
        caixa_texto.insert("insert", f"{menu_quadriceps.get()} | Série: {series8.get()} x {str(repeticoes8.get()).replace('.0','')} | Carga: {carga8.get()}\n")
        menu_quadriceps.set("Quadríceps")
    def add9():
        caixa_texto.insert("insert", f"{menu_posterior.get()} | Série: {series9.get()} x {str(repeticoes9.get()).replace('.0','')} | Carga: {carga9.get()}\n")
        menu_posterior.set("Posterior")
    def add10():
        caixa_texto.insert("insert", f"{menu_panturrilha.get()} | Série: {series10.get()} x {str(repeticoes10.get()).replace('.0','')} | Carga: {carga10.get()}\n")
        menu_panturrilha.set("Panturrilha")
    def add11():
        caixa_texto.insert("insert", f"{menu_adutor.get()} | Série: {series11.get()} x {str(repeticoes11.get()).replace('.0','')} | Carga: {carga11.get()}\n")
        menu_adutor.set("Adutor")
    def add12():
        caixa_texto.insert("insert", f"{menu_abdutor.get()} | Série: {series12.get()} x {str(repeticoes12.get()).replace('.0','')} | Carga: {carga12.get()}\n")
        menu_abdutor.set("Abdutor")
    def add13():
        caixa_texto.insert("insert", f"{menu_gluteo.get()} | Série: {series13.get()} x {str(repeticoes13.get()).replace('.0','')} | Carga: {carga13.get()}\n")
        menu_gluteo.set("Glúteo")
    def add14():
        caixa_texto.insert("insert", f"{menu_abdomen.get()} | Série: {series14.get()} x {str(repeticoes14.get()).replace('.0','')} | Carga: {carga14.get()}\n")
        menu_abdomen.set("Abdômen")
    def add15():
        caixa_texto.insert("insert", f"{menu_lombar.get()} | Série: {series15.get()} x {str(repeticoes15.get()).replace('.0','')} | Carga: {carga15.get()}\n")
        menu_lombar.set("Lombar")
    def add16():
        caixa_texto.insert("insert", f"{menu_paravertebral.get()} | Série: {series16.get()} x {str(repeticoes16.get()).replace('.0','')} | Carga: {carga16.get()}\n")
        menu_paravertebral.set("Paravertebral")

    def limpar():
        caixa_texto.delete("0.0", "end")

    treino.title("Monte Seu Treino")
    treino.geometry("1125x610")
    treino.maxsize(1125, 610)
    treino.minsize(1125, 610)

    frame2 = ctk.CTkFrame(treino)
    frame2.grid(row=0, column=0, sticky="ew", padx=5, pady=5)
    frame3 = ctk.CTkFrame(treino)
    frame3.grid(row=0, column=1, sticky="ew", padx=(0, 5), pady=5)
    frame4 = ctk.CTkFrame(treino)
    frame4.grid(row=0, column=2, sticky="ew", padx=(0, 5), pady=5, columnspan=2)
    frame5 = ctk.CTkFrame(treino)
    frame5.grid(row=0, column=4, sticky="ew", padx=(0, 5), pady=5)
    frame6 = ctk.CTkFrame(treino)
    frame6.grid(row=0, column=6, sticky="ew", padx=(0, 5), pady=5)

    texto_escolha = ctk.CTkLabel(frame2, text="Escolha e Adicione Exercíos:")
    texto_escolha.grid(row=0, column=0, padx=5, pady=5, sticky="w")
    menu_biceps = ctk.CTkComboBox(treino, values=(sorted(lista_biceps)))
    menu_biceps.grid(row=1, column=0, padx=5, pady=(0,5), sticky="ew")
    menu_biceps.set("Bíceps")
    menu_triceps = ctk.CTkComboBox(treino, values=(sorted(lista_triceps)))
    menu_triceps.grid(row=2, column=0, padx=5, pady=(0,5), sticky="ew")
    menu_triceps.set("Tríceps")
    menu_antebraco = ctk.CTkComboBox(treino, values=(sorted(lista_antebraco)))
    menu_antebraco.grid(row=3, column=0, padx=5, pady=(0,5), sticky="ew")
    menu_antebraco.set("Antebraço")
    menu_ombro = ctk.CTkComboBox(treino, values=(sorted(lista_ombro)))
    menu_ombro.grid(row=4, column=0, padx=5, pady=(0,5), sticky="ew")
    menu_ombro.set("Ombro")
    menu_trapezio = ctk.CTkComboBox(treino, values=(sorted(lista_trapezio)))
    menu_trapezio.grid(row=5, column=0, padx=5, pady=(0,5), sticky="ew")
    menu_trapezio.set("Trapézio")
    menu_costas = ctk.CTkComboBox(treino, values=(sorted(lista_costas)))
    menu_costas.grid(row=6, column=0, padx=5, pady=(0,5), sticky="ew")
    menu_costas.set("Costas")
    menu_peito = ctk.CTkComboBox(treino, values=(sorted(lista_peito)))
    menu_peito.grid(row=7, column=0, padx=5, pady=(0,5), sticky="ew")
    menu_peito.set("Peito")
    menu_quadriceps = ctk.CTkComboBox(treino, values=(sorted(lista_quadriceps)))
    menu_quadriceps.grid(row=8, column=0, padx=5, pady=(0,5), sticky="ew")
    menu_quadriceps.set("Quadríceps")
    menu_posterior = ctk.CTkComboBox(treino, values=(sorted(lista_posterior)))
    menu_posterior.grid(row=9, column=0, padx=5, pady=(0,5), sticky="ew")
    menu_posterior.set("Posterior")
    menu_panturrilha = ctk.CTkComboBox(treino, values=(sorted(lista_panturrilha)))
    menu_panturrilha.grid(row=10, column=0, padx=5, pady=(0,5), sticky="ew")
    menu_panturrilha.set("Panturrilha")
    menu_adutor = ctk.CTkComboBox(treino, values=(sorted(lista_adutor)))
    menu_adutor.grid(row=11, column=0, padx=5, pady=(0,5), sticky="ew")
    menu_adutor.set("Adutor")
    menu_abdutor = ctk.CTkComboBox(treino, values=(sorted(lista_abdutor)))
    menu_abdutor.grid(row=12, column=0, padx=5, pady=(0,5), sticky="ew")
    menu_abdutor.set("Abdutor")
    menu_gluteo = ctk.CTkComboBox(treino, values=(sorted(lista_gluteo)))
    menu_gluteo.grid(row=13, column=0, padx=5, pady=(0,5), sticky="ew")
    menu_gluteo.set("Glúteo")
    menu_abdomen = ctk.CTkComboBox(treino, values=(sorted(lista_abdomen)))
    menu_abdomen.grid(row=14, column=0, padx=5, pady=(0,5), sticky="ew")
    menu_abdomen.set("Abdômen")
    menu_lombar = ctk.CTkComboBox(treino, values=(sorted(lista_lombar)))
    menu_lombar.grid(row=15, column=0, padx=5, pady=(0,5), sticky="ew")
    menu_lombar.set("Lombar")
    menu_paravertebral = ctk.CTkComboBox(treino, values=(sorted(lista_paravertebral)))
    menu_paravertebral.grid(row=16, column=0, padx=5, pady=(0,5), sticky="ew")
    menu_paravertebral.set("Paravertebral")
    series = ctk.CTkLabel(frame3, text="Séries:")
    series.grid(row=0, column=1, padx=5, pady=5, sticky="w")
    series1 = ctk.CTkComboBox(treino, values=["1","2","3","4","5","6","7","8","9","10"], width=5)
    series1.grid(row=1, column=1, padx=(0,5), pady=(0,5), sticky="w")
    series1.set("3")
    series2 = ctk.CTkComboBox(treino, values=["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"], width=5)
    series2.grid(row=2, column=1, padx=(0,5), pady=(0,5), sticky="w")
    series2.set("3")
    series3 = ctk.CTkComboBox(treino, values=["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"], width=5)
    series3.grid(row=3, column=1, padx=(0,5), pady=(0,5), sticky="w")
    series3.set("3")
    series4 = ctk.CTkComboBox(treino, values=["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"], width=5)
    series4.grid(row=4, column=1, padx=(0,5), pady=(0,5), sticky="w")
    series4.set("3")
    series5 = ctk.CTkComboBox(treino, values=["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"], width=5)
    series5.grid(row=5, column=1, padx=(0,5), pady=(0,5), sticky="w")
    series5.set("3")
    series6 = ctk.CTkComboBox(treino, values=["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"], width=5)
    series6.grid(row=6, column=1, padx=(0,5), pady=(0,5), sticky="w")
    series6.set("3")
    series7 = ctk.CTkComboBox(treino, values=["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"], width=5)
    series7.grid(row=7, column=1, padx=(0,5), pady=(0,5), sticky="w")
    series7.set("3")
    series8 = ctk.CTkComboBox(treino, values=["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"], width=5)
    series8.grid(row=8, column=1, padx=(0,5), pady=(0,5), sticky="w")
    series8.set("3")
    series9 = ctk.CTkComboBox(treino, values=["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"], width=5)
    series9.grid(row=9, column=1, padx=(0,5), pady=(0,5), sticky="w")
    series9.set("3")
    series10 = ctk.CTkComboBox(treino, values=["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"], width=5)
    series10.grid(row=10, column=1, padx=(0,5), pady=(0,5), sticky="w")
    series10.set("3")
    series11 = ctk.CTkComboBox(treino, values=["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"], width=5)
    series11.grid(row=11, column=1, padx=(0,5), pady=(0,5), sticky="w")
    series11.set("3")
    series12 = ctk.CTkComboBox(treino, values=["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"], width=5)
    series12.grid(row=12, column=1, padx=(0,5), pady=(0,5), sticky="w")
    series12.set("3")
    series13 = ctk.CTkComboBox(treino, values=["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"], width=5)
    series13.grid(row=13, column=1, padx=(0,5), pady=(0,5), sticky="w")
    series13.set("3")
    series14 = ctk.CTkComboBox(treino, values=["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"], width=5)
    series14.grid(row=14, column=1, padx=(0,5), pady=(0,5), sticky="w")
    series14.set("3")
    series15 = ctk.CTkComboBox(treino, values=["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"], width=5)
    series15.grid(row=15, column=1, padx=(0,5), pady=(0,5), sticky="w")
    series15.set("3")
    series16 = ctk.CTkComboBox(treino, values=["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"], width=5)
    series16.grid(row=16, column=1, padx=(0,5), pady=(0,5), sticky="w")
    series16.set("3")
    repeticoes = ctk.CTkLabel(frame4, text="Repetições:")
    repeticoes.grid(row=0, column=2, padx=5, pady=5, sticky="w")
    repeticoes1 = ctk.CTkSlider(treino, from_=1, to=25, number_of_steps=24, width=100, command=mod1)
    repeticoes1.grid(row=1, column=2, padx=(0, 5), pady=(0, 5), sticky="w")
    repeticoes1.set(12)
    repeticoes2 = ctk.CTkSlider(treino, from_=1, to=25, number_of_steps=24, width=100, command=mod2)
    repeticoes2.grid(row=2, column=2, padx=(0, 5), pady=(0, 5), sticky="w")
    repeticoes2.set(12)
    repeticoes3 = ctk.CTkSlider(treino, from_=1, to=25, number_of_steps=24, width=100, command=mod3)
    repeticoes3.grid(row=3, column=2, padx=(0, 5), pady=(0, 5), sticky="w")
    repeticoes3.set(12)
    repeticoes4 = ctk.CTkSlider(treino, from_=1, to=25, number_of_steps=24, width=100, command=mod4)
    repeticoes4.grid(row=4, column=2, padx=(0, 5), pady=(0, 5), sticky="w")
    repeticoes4.set(12)
    repeticoes5 = ctk.CTkSlider(treino, from_=1, to=25, number_of_steps=24, width=100, command=mod5)
    repeticoes5.grid(row=5, column=2, padx=(0, 5), pady=(0, 5), sticky="w")
    repeticoes5.set(12)
    repeticoes6 = ctk.CTkSlider(treino, from_=1, to=25, number_of_steps=24, width=100, command=mod6)
    repeticoes6.grid(row=6, column=2, padx=(0, 5), pady=(0, 5), sticky="w")
    repeticoes6.set(12)
    repeticoes7 = ctk.CTkSlider(treino, from_=1, to=25, number_of_steps=24, width=100, command=mod7)
    repeticoes7.grid(row=7, column=2, padx=(0, 5), pady=(0, 5), sticky="w")
    repeticoes7.set(12)
    repeticoes8 = ctk.CTkSlider(treino, from_=1, to=25, number_of_steps=24, width=100, command=mod8)
    repeticoes8.grid(row=8, column=2, padx=(0, 5), pady=(0, 5), sticky="w")
    repeticoes8.set(12)
    repeticoes9 = ctk.CTkSlider(treino, from_=1, to=25, number_of_steps=24, width=100, command=mod9)
    repeticoes9.grid(row=9, column=2, padx=(0, 5), pady=(0, 5), sticky="w")
    repeticoes9.set(12)
    repeticoes10 = ctk.CTkSlider(treino, from_=1, to=25, number_of_steps=24, width=100, command=mod10)
    repeticoes10.grid(row=10, column=2, padx=(0, 5), pady=(0, 5), sticky="w")
    repeticoes10.set(12)
    repeticoes11 = ctk.CTkSlider(treino, from_=1, to=25, number_of_steps=24, width=100, command=mod11)
    repeticoes11.grid(row=11, column=2, padx=(0, 5), pady=(0, 5), sticky="w")
    repeticoes11.set(12)
    repeticoes12 = ctk.CTkSlider(treino, from_=1, to=25, number_of_steps=24, width=100, command=mod12)
    repeticoes12.grid(row=12, column=2, padx=(0, 5), pady=(0, 5), sticky="w")
    repeticoes12.set(12)
    repeticoes13 = ctk.CTkSlider(treino, from_=1, to=25, number_of_steps=24, width=100, command=mod13)
    repeticoes13.grid(row=13, column=2, padx=(0, 5), pady=(0, 5), sticky="w")
    repeticoes13.set(12)
    repeticoes14 = ctk.CTkSlider(treino, from_=1, to=25, number_of_steps=24, width=100, command=mod14)
    repeticoes14.grid(row=14, column=2, padx=(0, 5), pady=(0, 5), sticky="w")
    repeticoes14.set(12)
    repeticoes15 = ctk.CTkSlider(treino, from_=1, to=25, number_of_steps=24, width=100, command=mod15)
    repeticoes15.grid(row=15, column=2, padx=(0, 5), pady=(0, 5), sticky="w")
    repeticoes15.set(12)
    repeticoes16 = ctk.CTkSlider(treino, from_=1, to=25, number_of_steps=24, width=100, command=mod16)
    repeticoes16.grid(row=16, column=2, padx=(0, 5), pady=(0, 5), sticky="w")
    repeticoes16.set(12)
    trepeticoes1 = ctk.CTkLabel(treino, text="12")
    trepeticoes1.grid(row=1, column=3, padx=(0, 5), pady=(0, 5))
    trepeticoes2 = ctk.CTkLabel(treino, text="12")
    trepeticoes2.grid(row=2, column=3, padx=(0, 5), pady=(0, 5))
    trepeticoes3 = ctk.CTkLabel(treino, text="12")
    trepeticoes3.grid(row=3, column=3, padx=(0, 5), pady=(0, 5))
    trepeticoes4 = ctk.CTkLabel(treino, text="12")
    trepeticoes4.grid(row=4, column=3, padx=(0, 5), pady=(0, 5))
    trepeticoes5 = ctk.CTkLabel(treino, text="12")
    trepeticoes5.grid(row=5, column=3, padx=(0, 5), pady=(0, 5))
    trepeticoes6 = ctk.CTkLabel(treino, text="12")
    trepeticoes6.grid(row=6, column=3, padx=(0, 5), pady=(0, 5))
    trepeticoes7= ctk.CTkLabel(treino, text="12")
    trepeticoes7.grid(row=7, column=3, padx=(0, 5), pady=(0, 5))
    trepeticoes8 = ctk.CTkLabel(treino, text="12")
    trepeticoes8.grid(row=8, column=3, padx=(0, 5), pady=(0, 5))
    trepeticoes9 = ctk.CTkLabel(treino, text="12")
    trepeticoes9.grid(row=9, column=3, padx=(0, 5), pady=(0, 5))
    trepeticoes10 = ctk.CTkLabel(treino, text="12")
    trepeticoes10.grid(row=10, column=3, padx=(0, 5), pady=(0, 5))
    trepeticoes11 = ctk.CTkLabel(treino, text="12")
    trepeticoes11.grid(row=11, column=3, padx=(0, 5), pady=(0, 5))
    trepeticoes12 = ctk.CTkLabel(treino, text="12")
    trepeticoes12.grid(row=12, column=3, padx=(0, 5), pady=(0, 5))
    trepeticoes13 = ctk.CTkLabel(treino, text="12")
    trepeticoes13.grid(row=13, column=3, padx=(0, 5), pady=(0, 5))
    trepeticoes14 = ctk.CTkLabel(treino, text="12")
    trepeticoes14.grid(row=14, column=3, padx=(0, 5), pady=(0, 5))
    trepeticoes15 = ctk.CTkLabel(treino, text="12")
    trepeticoes15.grid(row=15, column=3, padx=(0, 5), pady=(0, 5))
    trepeticoes16 = ctk.CTkLabel(treino, text="12")
    trepeticoes16.grid(row=16, column=3, padx=(0, 5), pady=(0, 5))
    carga = ctk.CTkLabel(frame5, text="Carga:")
    carga.grid(row=0, column=4, padx=5, pady=5, sticky="w")
    carga1 = ctk.CTkSegmentedButton(treino, values=["Baixa", "Moderada", "Alta"])
    carga1.grid(row=1, column=4, padx=(0, 5), pady=(0, 5), sticky="w")
    carga1.set("Alta")
    carga2 = ctk.CTkSegmentedButton(treino, values=["Baixa", "Moderada", "Alta"])
    carga2.grid(row=2, column=4, padx=(0, 5), pady=(0, 5))
    carga2.set("Alta")
    carga3 = ctk.CTkSegmentedButton(treino, values=["Baixa", "Moderada", "Alta"])
    carga3.grid(row=3, column=4, padx=(0, 5), pady=(0, 5))
    carga3.set("Alta")
    carga4 = ctk.CTkSegmentedButton(treino, values=["Baixa", "Moderada", "Alta"])
    carga4.grid(row=4, column=4, padx=(0, 5), pady=(0, 5))
    carga4.set("Alta")
    carga5 = ctk.CTkSegmentedButton(treino, values=["Baixa", "Moderada", "Alta"])
    carga5.grid(row=5, column=4, padx=(0, 5), pady=(0, 5))
    carga5.set("Alta")
    carga6 = ctk.CTkSegmentedButton(treino, values=["Baixa", "Moderada", "Alta"])
    carga6.grid(row=6, column=4, padx=(0, 5), pady=(0, 5))
    carga6.set("Alta")
    carga7 = ctk.CTkSegmentedButton(treino, values=["Baixa", "Moderada", "Alta"])
    carga7.grid(row=7, column=4, padx=(0, 5), pady=(0, 5))
    carga7.set("Alta")
    carga8 = ctk.CTkSegmentedButton(treino, values=["Baixa", "Moderada", "Alta"])
    carga8.grid(row=8, column=4, padx=(0, 5), pady=(0, 5))
    carga8.set("Alta")
    carga9 = ctk.CTkSegmentedButton(treino, values=["Baixa", "Moderada", "Alta"])
    carga9.grid(row=9, column=4, padx=(0, 5), pady=(0, 5))
    carga9.set("Alta")
    carga10 = ctk.CTkSegmentedButton(treino, values=["Baixa", "Moderada", "Alta"])
    carga10.grid(row=10, column=4, padx=(0, 5), pady=(0, 5))
    carga10.set("Alta")
    carga11 = ctk.CTkSegmentedButton(treino, values=["Baixa", "Moderada", "Alta"])
    carga11.grid(row=11, column=4, padx=(0, 5), pady=(0, 5))
    carga11.set("Alta")
    carga12 = ctk.CTkSegmentedButton(treino, values=["Baixa", "Moderada", "Alta"])
    carga12.grid(row=12, column=4, padx=(0, 5), pady=(0, 5))
    carga12.set("Alta")
    carga13 = ctk.CTkSegmentedButton(treino, values=["Baixa", "Moderada", "Alta"])
    carga13.grid(row=13, column=4, padx=(0, 5), pady=(0, 5))
    carga13.set("Alta")
    carga14 = ctk.CTkSegmentedButton(treino, values=["Baixa", "Moderada", "Alta"])
    carga14.grid(row=14, column=4, padx=(0, 5), pady=(0, 5))
    carga14.set("Alta")
    carga15 = ctk.CTkSegmentedButton(treino, values=["Baixa", "Moderada", "Alta"])
    carga15.grid(row=15, column=4, padx=(0, 5), pady=(0, 5))
    carga15.set("Alta")
    carga16 = ctk.CTkSegmentedButton(treino, values=["Baixa", "Moderada", "Alta"])
    carga16.grid(row=16, column=4, padx=(0, 5), pady=(0, 5))
    carga16.set("Alta")

    add1= ctk.CTkButton(treino, text="ADD>",width=10, command=add1)
    add1.grid(row=1, column=5, padx=(0, 5), pady=(0, 5))
    add2 = ctk.CTkButton(treino, text="ADD>",width=10, command=add2)
    add2.grid(row=2, column=5, padx=(0, 5), pady=(0, 5))
    add3 = ctk.CTkButton(treino, text="ADD>",width=10, command=add3)
    add3.grid(row=3, column=5, padx=(0, 5), pady=(0, 5))
    add4 = ctk.CTkButton(treino, text="ADD>",width=10, command=add4)
    add4.grid(row=4, column=5, padx=(0, 5), pady=(0, 5))
    add5 = ctk.CTkButton(treino, text="ADD>",width=10, command=add5)
    add5.grid(row=5, column=5, padx=(0, 5), pady=(0, 5))
    add6 = ctk.CTkButton(treino, text="ADD>",width=10, command=add6)
    add6.grid(row=6, column=5, padx=(0, 5), pady=(0, 5))
    add7 = ctk.CTkButton(treino, text="ADD>",width=10, command=add7)
    add7.grid(row=7, column=5, padx=(0, 5), pady=(0, 5))
    add8 = ctk.CTkButton(treino, text="ADD>",width=10, command=add8)
    add8.grid(row=8, column=5, padx=(0, 5), pady=(0, 5))
    add9 = ctk.CTkButton(treino, text="ADD>",width=10, command=add9)
    add9.grid(row=9, column=5, padx=(0, 5), pady=(0, 5))
    add10 = ctk.CTkButton(treino, text="ADD>",width=10, command=add10)
    add10.grid(row=10, column=5, padx=(0, 5), pady=(0, 5))
    add11 = ctk.CTkButton(treino, text="ADD>",width=10, command=add11)
    add11.grid(row=11, column=5, padx=(0, 5), pady=(0, 5))
    add12 = ctk.CTkButton(treino, text="ADD>",width=10, command=add12)
    add12.grid(row=12, column=5, padx=(0, 5), pady=(0, 5))
    add13 = ctk.CTkButton(treino, text="ADD>",width=10, command=add13)
    add13.grid(row=13, column=5, padx=(0, 5), pady=(0, 5))
    add14 = ctk.CTkButton(treino, text="ADD>",width=10, command=add14)
    add14.grid(row=14, column=5, padx=(0, 5), pady=(0, 5))
    add15 = ctk.CTkButton(treino, text="ADD>",width=10, command=add15)
    add15.grid(row=15, column=5, padx=(0, 5), pady=(0, 5))
    add16 = ctk.CTkButton(treino, text="ADD>",width=10, command=add16)
    add16.grid(row=16, column=5, padx=(0, 5), pady=(0, 5))

    texto = ctk.CTkLabel(frame6, text="Seu Treino Aqui:")
    texto.grid(row=0, column=6, padx=5, pady=5, sticky="w")
    caixa_texto = ctk.CTkTextbox(treino, width=550, font=("Helvetica", 15))
    caixa_texto.grid(row=1, column=6, padx=(0, 5), pady=(0, 5), sticky="nsew", rowspan=16)

    exe_add = ctk.CTkEntry(treino, placeholder_text="Adicione exercício a uma lista")
    exe_add.grid(row=17, column=0, padx=2, pady=2, sticky="ew", columnspan = 4)
    cat_add = ctk.CTkOptionMenu(treino, values=lista_categorias)
    cat_add.grid(row=17, column=4, padx=2, pady=2, sticky="ew")
    add_exe = ctk.CTkButton(treino, text="ADD^", width=10, command=add)
    add_exe.grid(row=17, column=5, padx=2, pady=2)
    limpar_ = ctk.CTkButton(treino, text="Limpar Treino", command=limpar)
    limpar_.grid(row=17, column=6, padx=2, pady=2, sticky="ew")


    treino.mainloop()
def func_avaliacao():
    avaliacao = ctk.CTk()
    avaliacao.title("Escolha uma opção")
    avaliacao.geometry("340x165")
    avaliacao.maxsize(340, 165)
    avaliacao.minsize(340, 165)
    avaliacao.grid_columnconfigure(0, weight=1)

    def formulario():
        form = ctk.CTk()
        form.title("Formulário de Avaliação")
        form.geometry("890x615")
        form.maxsize(890, 615)
        form.minsize(890, 615)
        # form.grid_columnconfigure(0, weight=1)

        tab_avaliacao = pd.read_excel("tabela-avaliacao.xlsx")

        frame7 = ctk.CTkFrame(form)
        frame7.grid(row=0, column=0, sticky="we", padx=5, pady=5)
        frame8 = ctk.CTkFrame(form)
        frame8.grid(row=1, column=0, sticky="we", padx=5, pady=5)
        frame9 = ctk.CTkFrame(form)
        frame9.grid(row=2, column=0, sticky="we", padx=5, pady=5)
        frame10 = ctk.CTkFrame(form)
        frame10.grid(row=3, column=0, sticky="we", padx=5, pady=5)
        frame11 = ctk.CTkFrame(form)
        frame11.grid(row=0, column=1, sticky="we", padx=5, pady=5)
        frame12 = ctk.CTkFrame(form)
        frame12.grid(row=1, column=1, rowspan=3, sticky="nsew", padx=5, pady=5)
        frame13 = ctk.CTkFrame(form)
        frame13.grid(row=0, column=2, sticky="we", padx=5, pady=5)
        frame14 = ctk.CTkFrame(form)
        frame14.grid(row=1, column=2, rowspan=3, sticky="nswe", padx=5, pady=5)

        dados_gerais = ctk.CTkLabel(frame7, text="DADOS GERAIS")
        dados_gerais.grid(row=0, column=0, padx=5, pady=5, sticky="w")
        bioimpedancia = ctk.CTkLabel(frame9, text="BIOIMPEDÂNCIA")
        bioimpedancia.grid(row=2, column=0, padx=5, pady=5, sticky="w")
        dobras = ctk.CTkLabel(frame11, text="DOBRAS CUTÂNEAS (mm)")
        dobras.grid(row=0, column=1, padx=5, pady=5, sticky="w")
        perimetria = ctk.CTkLabel(frame13, text="PERIMETRIA (cm)")
        perimetria.grid(row=0, column=3, padx=5, pady=5, sticky="w")

        data = ctk.CTkLabel(frame8, text="Data da avaliação:")
        data.grid(row=0, column=0, padx=5, pady=5, sticky="w")
        data_entrada = ctk.CTkEntry(frame8, placeholder_text="dd/mm/yyyy")
        data_entrada.grid(row=0, column=1, padx=(50,5), pady=5, sticky="ew")
        nome = ctk.CTkLabel(frame8, text="Nome:")
        nome.grid(row=1, column=0, padx=5, pady=5, sticky="w")
        nome_entrada = ctk.CTkComboBox(frame8, values=list(set(list(tab_avaliacao["NOME"]))))
        nome_entrada.grid(row=1, column=1, padx=(50,5), pady=5, sticky="ew")
        peso = ctk.CTkLabel(frame8, text="Peso (Kg):")
        peso.grid(row=2, column=0, padx=5, pady=5, sticky="w")
        peso_entrada = ctk.CTkEntry(frame8, placeholder_text="Peso atual")
        peso_entrada.grid(row=2, column=1, padx=(50,5), pady=5, sticky="ew")
        altura = ctk.CTkLabel(frame8, text="Altura (cm):")
        altura.grid(row=3, column=0, padx=5, pady=5, sticky="w")
        altura_entrada = ctk.CTkEntry(frame8, placeholder_text="Altura")
        altura_entrada.grid(row=3, column=1, padx=(50,5), pady=5, sticky="ew")
        idade = ctk.CTkLabel(frame8, text="Idade:")
        idade.grid(row=4, column=0, padx=5, pady=5, sticky="w")
        idade_entrada = ctk.CTkEntry(frame8, placeholder_text="Idade")
        idade_entrada.grid(row=4, column=1, padx=(50,5), pady=5, sticky="ew")
        sexo = ctk.CTkLabel(frame8, text="Sexo:")
        sexo.grid(row=5, column=0, padx=5, pady=5, sticky="w")
        sexo_entrada = ctk.CTkSegmentedButton(frame8, values=["M", "F"])
        sexo_entrada.grid(row=5, column=1, padx=(50,5), pady=5, sticky="ew")

        imc = ctk.CTkLabel(frame10, text="IMC:")
        imc.grid(row=0, column=0, padx=5, pady=5, sticky="w")
        imc_entrada = ctk.CTkEntry(frame10, placeholder_text="IMC")
        imc_entrada.grid(row=0, column=1, padx=5, pady=5, sticky="ew")
        gordura = ctk.CTkLabel(frame10, text="% de Gordura")
        gordura.grid(row=1, column=0, padx=5, pady=5, sticky="w")
        gordura_entrada = ctk.CTkEntry(frame10, placeholder_text="% de gordura")
        gordura_entrada.grid(row=1, column=1, padx=5, pady=5, sticky="ew")
        musculo = ctk.CTkLabel(frame10, text="% de Músculo:")
        musculo.grid(row=2, column=0, padx=5, pady=5, sticky="w")
        musculo_entrada = ctk.CTkEntry(frame10, placeholder_text="% de músculo")
        musculo_entrada.grid(row=2, column=1, padx=5, pady=5, sticky="ew")
        indademet = ctk.CTkLabel(frame10, text="Idade metabólica basal:")
        indademet.grid(row=3, column=0, padx=5, pady=5, sticky="w")
        indademet_entrada = ctk.CTkEntry(frame10, placeholder_text="Idade metabólica")
        indademet_entrada.grid(row=3, column=1, padx=5, pady=5, sticky="ew")
        taxamet = ctk.CTkLabel(frame10, text="Taxa metabólica visceral:")
        taxamet.grid(row=4, column=0, padx=5, pady=5, sticky="w")
        taxamet_entrada = ctk.CTkEntry(frame10, placeholder_text="Taxa metabólica")
        taxamet_entrada.grid(row=4, column=1, padx=5, pady=5, sticky="ew")
        gordura_visceral = ctk.CTkLabel(frame10, text="Índice de gordura visceral:")
        gordura_visceral.grid(row=5, column=0, padx=5, pady=5, sticky="w")
        gordura_visceral_entrada = ctk.CTkEntry(frame10, placeholder_text="Gordura visceral")
        gordura_visceral_entrada.grid(row=5, column=1, padx=5, pady=5, sticky="ew")

        tricipital = ctk.CTkLabel(frame12, text="Tricipital:")
        tricipital.grid(row=0, column=0, padx=5, pady=5, sticky="w")
        tricipital_entrada = ctk.CTkEntry(frame12, placeholder_text="Tricipital")
        tricipital_entrada.grid(row=0, column=1, padx=5, pady=5, sticky="ew")
        subescapular = ctk.CTkLabel(frame12, text="Subescapular:")
        subescapular.grid(row=1, column=0, padx=5, pady=5, sticky="w")
        subescapular_entrada = ctk.CTkEntry(frame12, placeholder_text="Subescapular")
        subescapular_entrada.grid(row=1, column=1, padx=5, pady=5, sticky="ew")
        peitoral = ctk.CTkLabel(frame12, text="Peitoral:")
        peitoral.grid(row=2, column=0, padx=5, pady=5, sticky="w")
        peitoral_entrada = ctk.CTkEntry(frame12, placeholder_text="Peitoral")
        peitoral_entrada.grid(row=2, column=1, padx=5, pady=5, sticky="ew")
        bicepsdobra = ctk.CTkLabel(frame12, text="Bíceps:")
        bicepsdobra.grid(row=3, column=0, padx=5, pady=5, sticky="w")
        bicepsdobra_entrada = ctk.CTkEntry(frame12, placeholder_text="Bíceps")
        bicepsdobra_entrada.grid(row=3, column=1, padx=5, pady=5, sticky="ew")
        suprailiaca = ctk.CTkLabel(frame12, text="Supra Ilíaca:")
        suprailiaca.grid(row=4, column=0, padx=5, pady=5, sticky="w")
        suprailiaca_entrada = ctk.CTkEntry(frame12, placeholder_text="Supra Ilíaca")
        suprailiaca_entrada.grid(row=4, column=1, padx=5, pady=5, sticky="ew")
        axilar = ctk.CTkLabel(frame12, text="Axilar Média:")
        axilar.grid(row=5, column=0, padx=5, pady=5, sticky="w")
        axilar_entrada = ctk.CTkEntry(frame12, placeholder_text="Axilar")
        axilar_entrada.grid(row=5, column=1, padx=5, pady=5, sticky="ew")
        abdominal = ctk.CTkLabel(frame12, text="Abdominal:")
        abdominal.grid(row=6, column=0, padx=5, pady=5, sticky="w")
        abdominal_entrada = ctk.CTkEntry(frame12, placeholder_text="Abdominal")
        abdominal_entrada.grid(row=6, column=1, padx=5, pady=5, sticky="ew")
        coxa = ctk.CTkLabel(frame12, text="Coxa:")
        coxa.grid(row=7, column=0, padx=5, pady=5, sticky="w")
        coxa_entrada = ctk.CTkEntry(frame12, placeholder_text="Coxa")
        coxa_entrada.grid(row=7, column=1, padx=5, pady=5, sticky="ew")
        panturrilhadobra = ctk.CTkLabel(frame12, text="Panturrilha:")
        panturrilhadobra.grid(row=8, column=0, padx=5, pady=5, sticky="w")
        panturrilhadobra_entrada = ctk.CTkEntry(frame12, placeholder_text="Panturrilha")
        panturrilhadobra_entrada.grid(row=8, column=1, padx=5, pady=5, sticky="ew")

        bracodireito = ctk.CTkLabel(frame14, text="Braço direito:")
        bracodireito.grid(row=0, column=0, padx=5, pady=5, sticky="w")
        bracodireito_entrada = ctk.CTkEntry(frame14, placeholder_text="Braço direito")
        bracodireito_entrada.grid(row=0, column=1, padx=5, pady=5, sticky="ew")
        bracodireitocontraido = ctk.CTkLabel(frame14, text="Braço direito contraído:")
        bracodireitocontraido.grid(row=1, column=0, padx=5, pady=5, sticky="w")
        bracodireitocontraido_entrada = ctk.CTkEntry(frame14, placeholder_text="Direito contraído")
        bracodireitocontraido_entrada.grid(row=1, column=1, padx=5, pady=5, sticky="ew")
        bracoesquerdo = ctk.CTkLabel(frame14, text="Braço esquerdo:")
        bracoesquerdo.grid(row=2, column=0, padx=5, pady=5, sticky="w")
        bracoesquerdo_entrada = ctk.CTkEntry(frame14, placeholder_text="Braço esquerdo")
        bracoesquerdo_entrada.grid(row=2, column=1, padx=5, pady=5, sticky="ew")
        bracoesquerdocontraido = ctk.CTkLabel(frame14, text="Braço esquerdo contraído:")
        bracoesquerdocontraido.grid(row=3, column=0, padx=5, pady=5, sticky="w")
        bracoesquerdocontraido_entrada = ctk.CTkEntry(frame14, placeholder_text="Esquerdo contraído")
        bracoesquerdocontraido_entrada.grid(row=3, column=1, padx=5, pady=5, sticky="ew")
        ombroper = ctk.CTkLabel(frame14, text="Ombro:")
        ombroper.grid(row=4, column=0, padx=5, pady=5, sticky="w")
        ombroper_entrada = ctk.CTkEntry(frame14, placeholder_text="Ombro")
        ombroper_entrada.grid(row=4, column=1, padx=5, pady=5, sticky="ew")
        torax = ctk.CTkLabel(frame14, text="Tórax:")
        torax.grid(row=5, column=0, padx=5, pady=5, sticky="w")
        torax_entrada = ctk.CTkEntry(frame14, placeholder_text="Tórax")
        torax_entrada.grid(row=5, column=1, padx=5, pady=5, sticky="ew")
        cintura = ctk.CTkLabel(frame14, text="Cintura:")
        cintura.grid(row=6, column=0, padx=5, pady=5, sticky="w")
        cintura_entrada = ctk.CTkEntry(frame14, placeholder_text="Cintura")
        cintura_entrada.grid(row=6, column=1, padx=5, pady=5, sticky="ew")
        abdomenper = ctk.CTkLabel(frame14, text="Abdômen:")
        abdomenper.grid(row=7, column=0, padx=5, pady=5, sticky="w")
        abdomenper_entrada = ctk.CTkEntry(frame14, placeholder_text="Abdômen")
        abdomenper_entrada.grid(row=7, column=1, padx=5, pady=5, sticky="ew")
        quadril = ctk.CTkLabel(frame14, text="Quadril:")
        quadril.grid(row=8, column=0, padx=5, pady=5, sticky="w")
        quadril_entrada = ctk.CTkEntry(frame14, placeholder_text="Quadril")
        quadril_entrada.grid(row=8, column=1, padx=5, pady=5, sticky="ew")
        coxadireita = ctk.CTkLabel(frame14, text="Coxa direita:")
        coxadireita.grid(row=9, column=0, padx=5, pady=5, sticky="w")
        coxadireita_entrada = ctk.CTkEntry(frame14, placeholder_text="Coxa direita")
        coxadireita_entrada.grid(row=9, column=1, padx=5, pady=5, sticky="ew")
        coxaesquerda = ctk.CTkLabel(frame14, text="Coxa esquerda:")
        coxaesquerda.grid(row=10, column=0, padx=5, pady=5, sticky="w")
        coxaesquerda_entrada = ctk.CTkEntry(frame14, placeholder_text="Coxa esuqerda")
        coxaesquerda_entrada.grid(row=10, column=1, padx=5, pady=5, sticky="ew")
        panturrilhadireita = ctk.CTkLabel(frame14, text="Panturrilha direita:")
        panturrilhadireita.grid(row=11, column=0, padx=5, pady=5, sticky="w")
        panturrilhadireita_entrada = ctk.CTkEntry(frame14, placeholder_text="Panturrilha direita")
        panturrilhadireita_entrada.grid(row=11, column=1, padx=5, pady=5, sticky="ew")
        panturrilhaesquerda = ctk.CTkLabel(frame14, text="Panturrilha esquerda:")
        panturrilhaesquerda.grid(row=12, column=0, padx=5, pady=5, sticky="w")
        panturrilhaesquerda_entrada = ctk.CTkEntry(frame14, placeholder_text="Panturrilha esquerda")
        panturrilhaesquerda_entrada.grid(row=12, column=1, padx=5, pady=5, sticky="ew")

        def cadastro():
            tab_avaliacao = pd.read_excel("tabela-avaliacao.xlsx")
            tam = len(tab_avaliacao)
            tab_avaliacao.loc[tam, "DATA"] = data_entrada.get()
            tab_avaliacao.loc[tam, "NOME"] = nome_entrada.get()
            tab_avaliacao.loc[tam, "PESO"] = peso_entrada.get().replace(",",".")
            tab_avaliacao.loc[tam, "ALTURA"] = altura_entrada.get()
            tab_avaliacao.loc[tam, "IDADE"] = idade_entrada.get()
            tab_avaliacao.loc[tam, "SEXO"] = sexo_entrada.get()
            tab_avaliacao.loc[tam, "BIO: IMC"] = imc_entrada.get().replace(",",".")
            tab_avaliacao.loc[tam, "BIO: % DE GORDURA"] = gordura_entrada.get().replace(",", ".")
            tab_avaliacao.loc[tam, "BIO: % DE MUSCULO"] = musculo_entrada.get().replace(",", ".")
            tab_avaliacao.loc[tam, "BIO: IDADE METABOLICA BASAL"] = indademet_entrada.get().replace(",", ".")
            tab_avaliacao.loc[tam, "BIO: TAXA METABOLICA VISCERAL"] = taxamet_entrada.get().replace(",", ".")
            tab_avaliacao.loc[tam, "BIO: INDICE DE GORDURA VISCERAL"] = gordura_visceral_entrada.get().replace(",", ".")
            tab_avaliacao.loc[tam, "DOBRA: TRICIPITAL"] = tricipital_entrada.get().replace(",", ".")
            tab_avaliacao.loc[tam, "DOBRA: SUBESCAPULAR"] = subescapular_entrada.get().replace(",", ".")
            tab_avaliacao.loc[tam, "DOBRA: PEITORAL"] = peitoral_entrada.get().replace(",", ".")
            tab_avaliacao.loc[tam, "DOBRA: BICEPS"] = bicepsdobra_entrada.get().replace(",", ".")
            tab_avaliacao.loc[tam, "DOBRA: SUPRA ILIACA"] = suprailiaca_entrada.get().replace(",", ".")
            tab_avaliacao.loc[tam, "DOBRA: AXILAR MEDIA"] = axilar_entrada.get().replace(",", ".")
            tab_avaliacao.loc[tam, "DOBRA: ABDOMINAL"] = abdominal_entrada.get().replace(",", ".")
            tab_avaliacao.loc[tam, "DOBRA: COXA"] = coxa_entrada.get().replace(",", ".")
            tab_avaliacao.loc[tam, "DOBRA: PANTURRILHA"] = panturrilhadobra_entrada.get().replace(",", ".")
            tab_avaliacao.loc[tam, "PER: BRACO DIREITO"] = bracodireito_entrada.get().replace(",", ".")
            tab_avaliacao.loc[tam, "PER: BRACO DIREITO CONTRAIDO"] = bracodireitocontraido_entrada.get().replace(",", ".")
            tab_avaliacao.loc[tam, "PER: BRACO ESQUERDO"] = bracoesquerdo_entrada.get().replace(",", ".")
            tab_avaliacao.loc[tam, "PER: BRACO ESQUERDO CONTRAIDO"] = bracoesquerdocontraido_entrada.get().replace(",", ".")
            tab_avaliacao.loc[tam, "PER: OMBRO"] = ombroper_entrada.get().replace(",", ".")
            tab_avaliacao.loc[tam, "PER: TORAX"] = torax_entrada.get().replace(",", ".")
            tab_avaliacao.loc[tam, "PER: CINTURA"] = cintura_entrada.get().replace(",", ".")
            tab_avaliacao.loc[tam, "PER: ABDOMEN"] = abdomenper_entrada.get().replace(",", ".")
            tab_avaliacao.loc[tam, "PER: QUADRIL"] = quadril_entrada.get().replace(",", ".")
            tab_avaliacao.loc[tam, "PER: COXA DIREITA"] = coxadireita_entrada.get().replace(",", ".")
            tab_avaliacao.loc[tam, "PER: COXA ESQUERDA"] = coxaesquerda_entrada.get().replace(",", ".")
            tab_avaliacao.loc[tam, "PER: PANTURRILHA DIREITA"] = panturrilhadireita_entrada.get().replace(",", ".")
            tab_avaliacao.loc[tam, "PER: PANTURRILHA ESQUERDA"] = panturrilhaesquerda_entrada.get().replace(",", ".")
            tab_avaliacao.loc[tam, "IMC"] = float(peso_entrada.get().replace(",", ".")) / ((float(altura_entrada.get().replace(",", "."))*float(altura_entrada.get().replace(",", ".")))/10000)
            somadobras = float(tricipital_entrada.get().replace(",", ".")) + float(subescapular_entrada.get().replace(",", ".")) + float(peitoral_entrada.get().replace(",", ".")) + float(axilar_entrada.get().replace(",", ".")) + float(abdominal_entrada.get().replace(",", ".")) + float(suprailiaca_entrada.get().replace(",", ".")) + float(coxa_entrada.get().replace(",", "."))
            tab_avaliacao.loc[tam, "% DE GORDURA"] = (495/(1.112 - 0.00043499 * somadobras + 0.00000055 * somadobras * somadobras - 0.00028826 * float(idade_entrada.get().replace(",", ".")))) - 450

            tab_avaliacao.to_excel("tabela-avaliacao.xlsx", index=False)

            ok = ctk.CTk()
            ok.title("Cadastro Realizado")
            ok.geometry("300x100")
            ok.maxsize(300, 100)
            ok.minsize(300, 100)
            ok.grid_columnconfigure(0, weight=1)

            msgok = ctk.CTkLabel(ok, text="Cadastro realizado com sucesso!")
            msgok.grid(row=0, column=0, padx=5, pady=5, sticky="ew")

            def fechar():
                ok.destroy()

            ok_button = ctk.CTkButton(ok, text="OK", command=fechar)
            ok_button.grid(row=1, column=0, padx=5, pady=5, sticky="ew")

            data_entrada.delete(0, 100)
            peso_entrada.delete(0, 100)
            altura_entrada.delete(0, 100)
            idade_entrada.delete(0, 100)
            imc_entrada.delete(0, 100)
            gordura_entrada.delete(0, 100)
            musculo_entrada.delete(0, 100)
            indademet_entrada.delete(0, 100)
            taxamet_entrada.delete(0, 100)
            gordura_visceral_entrada.delete(0, 100)
            tricipital_entrada.delete(0, 100)
            subescapular_entrada.delete(0, 100)
            peitoral_entrada.delete(0, 100)
            bicepsdobra_entrada.delete(0, 100)
            suprailiaca_entrada.delete(0, 100)
            axilar_entrada.delete(0, 100)
            abdominal_entrada.delete(0, 100)
            coxa_entrada.delete(0, 100)
            panturrilhadobra_entrada.delete(0, 100)
            bracodireito_entrada.delete(0, 100)
            bracodireitocontraido_entrada.delete(0, 100)
            bracoesquerdo_entrada.delete(0, 100)
            bracoesquerdocontraido_entrada.delete(0, 100)
            ombroper_entrada.delete(0, 100)
            torax_entrada.delete(0, 100)
            cintura_entrada.delete(0, 100)
            abdomenper_entrada.delete(0, 100)
            quadril_entrada.delete(0, 100)
            coxadireita_entrada.delete(0, 100)
            coxaesquerda_entrada.delete(0, 100)
            panturrilhadireita_entrada.delete(0, 100)
            panturrilhaesquerda_entrada.delete(0, 100)

            ok.mainloop()

        cadastrar = ctk.CTkButton(form, text="CADASTAR", command=cadastro)
        cadastrar.grid(row=4, column=0, columnspan=3, padx=5, pady=5, sticky="ew")

        form.mainloop()

    frame15 = ctk.CTkFrame(avaliacao)
    frame15.grid(row=0, column=0, sticky="nsew", padx=10, pady=10)

    button_teste = ctk.CTkButton(frame15, text="Fazer Avaliação", command=formulario, width=300)
    button_teste.grid(row=0, column=0, padx=10, pady=10, sticky="ew")

    def abrir_anamnese():
        import os
        os.startfile("anamnese.pdf")

    button_anamnese = ctk.CTkButton(frame15, text="Anamnese", width=300, command=abrir_anamnese)
    button_anamnese.grid(row=1, column=0, padx=10, pady=10, sticky="ew")

    def abrir_resultado():
        import os
        os.startfile("resultados.pbix")

        aguarde = ctk.CTk()
        aguarde.title("Aguarde seu relatório")
        aguarde.geometry("350x100")
        aguarde.maxsize(350, 100)
        aguarde.minsize(350, 100)
        aguarde.grid_columnconfigure(0, weight=1)

        msgaguarde = ctk.CTkLabel(aguarde, text="Aguarde um instante para seu relatório iniciar. Aperte OK!")
        msgaguarde.grid(row=0, column=0, padx=5, pady=5, sticky="ew")

        def fechar2():
            aguarde.destroy()

        aguarde_button = ctk.CTkButton(aguarde, text="OK", command=fechar2)
        aguarde_button.grid(row=1, column=0, padx=5, pady=5, sticky="ew")

        aguarde.mainloop()

    button_resultados = ctk.CTkButton(frame15, text="Resultados", width=300, command=abrir_resultado)
    button_resultados.grid(row=3, column=0, padx=10, pady=10, sticky="ew")

    avaliacao.mainloop()

frame1 = ctk.CTkFrame(principal, width=100, height=100)
frame1.grid(row=0, column=0, padx=10, pady=10, sticky="we", rowspan=3)

msg_inicial = ctk.CTkLabel(frame1, text="Escolha uma opção:")
msg_inicial.grid(row=0, column=0, sticky="ew", padx=10)

button_montar = ctk.CTkButton(frame1, text="Montar Treino", command=func_treino, width=300)
button_montar.grid(row=1, column=0, padx=10, pady=10, sticky="ew")

button_avaliacao = ctk.CTkButton(frame1, text="Avaliação Física", command=func_avaliacao, width=300)
button_avaliacao.grid(row=2, column=0, padx=10, pady=10, sticky="ew")

principal.mainloop()